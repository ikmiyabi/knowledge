"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[4060],{6652:(e,n,i)=>{i.r(n),i.d(n,{data:()=>a});const a={key:"v-31c05a16",path:"/middleware/database/INNER_JOIN%E3%81%A8LEFT_JOIN%E3%81%AE%E9%81%95%E3%81%84.html",title:"INNER JOINとOUTER JOINの違い",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"INNER JOIN",slug:"inner-join",children:[]},{level:2,title:"OUTER JOIN",slug:"outer-join",children:[]},{level:2,title:"INNER JOINとOUTER JOINの違い",slug:"inner-joinとouter-joinの違い-1",children:[]},{level:2,title:"省略について",slug:"省略について",children:[]}],filePathRelative:"middleware/database/INNER_JOINとLEFT_JOINの違い.md",git:{updatedTime:1639532968e3,contributors:[{name:"bamv-ikeda",email:"ikeda@bamv.co.jp",commits:1}]}}},5990:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const a=(0,i(6252).uE)('<h1 id="inner-joinとouter-joinの違い" tabindex="-1"><a class="header-anchor" href="#inner-joinとouter-joinの違い" aria-hidden="true">#</a> INNER JOINとOUTER JOINの違い</h1><h2 id="inner-join" tabindex="-1"><a class="header-anchor" href="#inner-join" aria-hidden="true">#</a> INNER JOIN</h2><ul><li>指定した条件に合致するテーブルを結びつけるレコード同士を結合させる（内部結合）</li><li>指定した条件に合うレコードがない場合は取得しない</li><li>一番よく使うJOIN</li></ul><p>例） id,name,company_idのカラムをもつuserテーブルと id,nameを持つcompanyテーブルを結合する</p><div class="language-SQL ext-SQL line-numbers-mode"><pre class="language-SQL"><code>SELECT u.id,\n    u.name,\n    u.company_id,\n    c.id,\n    c.name\nFROM user u\nINNER JOIN company c\n    ON u.company_id = c.id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="outer-join" tabindex="-1"><a class="header-anchor" href="#outer-join" aria-hidden="true">#</a> OUTER JOIN</h2><ul><li>指定した条件に合うレコードがない場合も取得する</li><li>LEFT JOINは結合される側（右側）のレコードがベース</li><li>RIGHT JOINは結合する側（左側）のレコードがベース</li><li>ベースのレコードは条件に合致するものがなくても残る</li></ul><h2 id="inner-joinとouter-joinの違い-1" tabindex="-1"><a class="header-anchor" href="#inner-joinとouter-joinの違い-1" aria-hidden="true">#</a> INNER JOINとOUTER JOINの違い</h2><ul><li>INNER JOINは条件に合致するレコードだけ取得する</li><li>OUTER JOINは条件に合致しないレコードも取得する</li></ul><h2 id="省略について" tabindex="-1"><a class="header-anchor" href="#省略について" aria-hidden="true">#</a> 省略について</h2><ul><li>ただの JOIN は INNER JOIN の省略形</li><li>LEFT JOIN は LEFT OUTER JOIN の省略形</li><li>RIGHT JOIN は RIGHT OUTER JOIN の省略形</li></ul>',11),l={},r=(0,i(3744).Z)(l,[["render",function(e,n){return a}]])},3744:(e,n)=>{n.Z=(e,n)=>{const i=e.__vccOpts||e;for(const[e,a]of n)i[e]=a;return i}}}]);