"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[753],{9311:(e,a,l)=>{l.r(a),l.d(a,{data:()=>s});const s={key:"v-1c32e788",path:"/middleware/embulk/embulk%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9.html",title:"Embulk",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"Embulkとは?",slug:"embulkとは",children:[]},{level:2,title:"Embulkの特徴",slug:"embulkの特徴",children:[]},{level:2,title:"Embulkのインストール",slug:"embulkのインストール",children:[{level:3,title:"java8へのパスを通す",slug:"java8へのパスを通す",children:[]},{level:3,title:"Embulkインストール",slug:"embulkインストール",children:[]},{level:3,title:"Embulkプラグイン用のバンドルを作成",slug:"embulkプラグイン用のバンドルを作成",children:[]},{level:3,title:"Gemfileを修正してプラグインをインストールする",slug:"gemfileを修正してプラグインをインストールする",children:[]},{level:3,title:"プラグインの更新",slug:"プラグインの更新",children:[]},{level:3,title:"サンプルデータを作成する",slug:"サンプルデータを作成する",children:[]},{level:3,title:"guessコマンドでデータ定義を推測して定義ファイルを生成する",slug:"guessコマンドでデータ定義を推測して定義ファイルを生成する",children:[]},{level:3,title:"プレビューを実行する",slug:"プレビューを実行する",children:[]},{level:3,title:"実行する",slug:"実行する",children:[]},{level:3,title:".envで読み込んだ変数を使用する",slug:"envで読み込んだ変数を使用する",children:[]}]}],filePathRelative:"middleware/embulk/embulkの使い方.md",git:{updatedTime:1639532968e3,contributors:[{name:"bamv-ikeda",email:"ikeda@bamv.co.jp",commits:1}]}}},833:(e,a,l)=>{l.r(a),l.d(a,{default:()=>b});var s=l(6252);const n=(0,s.uE)('<h1 id="embulk" tabindex="-1"><a class="header-anchor" href="#embulk" aria-hidden="true">#</a> Embulk</h1><h2 id="embulkとは" tabindex="-1"><a class="header-anchor" href="#embulkとは" aria-hidden="true">#</a> Embulkとは?</h2><ul><li>バッチ処理に特化した並列データ転送ツール(ETL)</li><li>大量に投入(bulk insert)されたデータを細かく圧縮し、並列で取り込むこと(bulk load)ができる</li><li>Fluentdを制作しているTreasure Dataが開発</li></ul><p><img src="embulk.png" alt="embulk"></p>',4),i=(0,s.Uk)("画像引用元： "),u={href:"https://www.slideshare.net/frsyuki/embuk-making-data-integration-works-relaxed?ref=https://www.embulk.org/",target:"_blank",rel:"noopener noreferrer"},r=(0,s.Uk)("Embulk, an open-source plugin-based parallel bulk data loader"),d=(0,s.uE)('<h2 id="embulkの特徴" tabindex="-1"><a class="header-anchor" href="#embulkの特徴" aria-hidden="true">#</a> Embulkの特徴</h2><ul><li>ストレージのbulk処理に特化</li><li>巨大なデータの並列分散処理を実現</li><li>トランザクション制御あり <ul><li>全て成功しなかったら実行前の状態に巻き戻る</li><li>失敗したタスクだけを後からやり直すレジューム機能</li></ul></li><li>guess機能 <ul><li>入力データを自動で推定し、設定ファイルを生成</li></ul></li><li>オープンソース</li><li>本体とは別にプラグインを追加することで動作する <ul><li>プラグインはruby, javaで書かれていて、実装自体も比較的容易</li></ul></li></ul><h2 id="embulkのインストール" tabindex="-1"><a class="header-anchor" href="#embulkのインストール" aria-hidden="true">#</a> Embulkのインストール</h2><ul><li>java8をインストールする</li></ul><p>下記サイトからamazon corretto 8をインストールする(Macの場合はMac版のダウンロードリンクから取得) https://docs.aws.amazon.com/ja_jp/corretto/latest/corretto-8-ug/downloads-list.html</p><h3 id="java8へのパスを通す" tabindex="-1"><a class="header-anchor" href="#java8へのパスを通す" aria-hidden="true">#</a> java8へのパスを通す</h3><ul><li>.zshrcに下記を追記する</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>/usr/libexec/java_home -v <span class="token number">1.8</span><span class="token variable">`</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>パス設定を反映</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="embulkインストール" tabindex="-1"><a class="header-anchor" href="#embulkインストール" aria-hidden="true">#</a> Embulkインストール</h3><ul><li>下記コマンドで、Embulkをダウンロードして配置して、~/bin配下に配置する</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> --create-dirs -o ~/bin/embulk -L <span class="token string">&quot;https://dl.embulk.org/embulk-latest.jar&quot;</span>\n<span class="token function">chmod</span> +x ~/bin/embulk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>Embulkのパスを通す</li></ul><p>以下の対応でもOK</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># install embulk</span>\n<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$HOME</span>/.embulk/bin:<span class="token environment constant">$PATH</span>&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="embulkプラグイン用のバンドルを作成" tabindex="-1"><a class="header-anchor" href="#embulkプラグイン用のバンドルを作成" aria-hidden="true">#</a> Embulkプラグイン用のバンドルを作成</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk mkbundle bundle\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="gemfileを修正してプラグインをインストールする" tabindex="-1"><a class="header-anchor" href="#gemfileを修正してプラグインをインストールする" aria-hidden="true">#</a> Gemfileを修正してプラグインをインストールする</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> bundle\n<span class="token function">vi</span> Gemfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>Gemfileを修正する</li></ul><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>source &#39;https://rubygems.org/&#39;\n\ngem &#39;embulk&#39;, &#39;&lt; 0.10&#39;\n\n# output\ngem &#39;embulk-output-command&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>プラグインをバンドルインストール</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk bundle <span class="token function">install</span> --path<span class="token operator">=</span>vendor/bundle\nembulk bundle list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="プラグインの更新" tabindex="-1"><a class="header-anchor" href="#プラグインの更新" aria-hidden="true">#</a> プラグインの更新</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk bundle update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>※Gemfileにはgem embulkがないとエラーになる</p><h3 id="サンプルデータを作成する" tabindex="-1"><a class="header-anchor" href="#サンプルデータを作成する" aria-hidden="true">#</a> サンプルデータを作成する</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk example <span class="token builtin class-name">test</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="guessコマンドでデータ定義を推測して定義ファイルを生成する" tabindex="-1"><a class="header-anchor" href="#guessコマンドでデータ定義を推測して定義ファイルを生成する" aria-hidden="true">#</a> guessコマンドでデータ定義を推測して定義ファイルを生成する</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk guess -b bundle test/seed.yml -o test/config.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="プレビューを実行する" tabindex="-1"><a class="header-anchor" href="#プレビューを実行する" aria-hidden="true">#</a> プレビューを実行する</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk preview -b bundle test/config.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="実行する" tabindex="-1"><a class="header-anchor" href="#実行する" aria-hidden="true">#</a> 実行する</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk run -b bundle test/config.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="envで読み込んだ変数を使用する" tabindex="-1"><a class="header-anchor" href="#envで読み込んだ変数を使用する" aria-hidden="true">#</a> .envで読み込んだ変数を使用する</h3><ul><li>.envを作成する</li></ul><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>SAMPLE=&quot;sample_&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>test/config.yml.liquidを作成する</li></ul><p>sample_の部分を <code>env.SAMPLE</code> へ変更する</p><ul><li>init.shを作成する</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>embulk -Einit.sh run -b bundle test/config.yml.liquid\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',42),t={},b=(0,l(3744).Z)(t,[["render",function(e,a){const l=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[n,(0,s._)("p",null,[i,(0,s._)("a",u,[r,(0,s.Wm)(l)])]),d],64)}]])},3744:(e,a)=>{a.Z=(e,a)=>{const l=e.__vccOpts||e;for(const[e,s]of a)l[e]=s;return l}}}]);