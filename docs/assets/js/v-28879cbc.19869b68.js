"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[6986],{5483:(l,e,i)=>{i.r(e),i.d(e,{data:()=>a});const a={key:"v-28879cbc",path:"/infra/aws/AWS%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%AE%E6%A6%82%E5%BF%B5.html",title:"AWSクラウドの概念",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"AWSとは",slug:"awsとは",children:[]},{level:2,title:"AWSの6つのメリット",slug:"awsの6つのメリット",children:[]},{level:2,title:"アーキテクチャの設計原理",slug:"アーキテクチャの設計原理",children:[{level:3,title:"Desigin for Failure",slug:"desigin-for-failure",children:[]}]},{level:2,title:"コンポーネントの分離",slug:"コンポーネントの分離",children:[]},{level:2,title:"弾力性の実装",slug:"弾力性の実装",children:[{level:3,title:"実装方式",slug:"実装方式",children:[]}]},{level:2,title:"並列化",slug:"並列化",children:[]},{level:2,title:"コンテンツ配置",slug:"コンテンツ配置",children:[{level:3,title:"CDN(Content Delivery Network)",slug:"cdn-content-delivery-network",children:[]}]},{level:2,title:"AWS Well-Architectedフレームワーク",slug:"aws-well-architectedフレームワーク",children:[]}],filePathRelative:"infra/aws/AWSクラウドの概念.md",git:{updatedTime:1639532968e3,contributors:[{name:"bamv-ikeda",email:"ikeda@bamv.co.jp",commits:1}]}}},9226:(l,e,i)=>{i.r(e),i.d(e,{default:()=>r});const a=(0,i(6252).uE)('<h1 id="awsクラウドの概念" tabindex="-1"><a class="header-anchor" href="#awsクラウドの概念" aria-hidden="true">#</a> AWSクラウドの概念</h1><h2 id="awsとは" tabindex="-1"><a class="header-anchor" href="#awsとは" aria-hidden="true">#</a> AWSとは</h2><p>Amazon社が提供しているクラウドサービスの総称</p><p>※クラウドサービスとは、インターネットを経由してコンピューティング、データベース、ストレージ、アプリケーション等のITリソースをオンデマンドで(必要に応じて必要な分だけ)利用することのできるサービスの総称</p><h2 id="awsの6つのメリット" tabindex="-1"><a class="header-anchor" href="#awsの6つのメリット" aria-hidden="true">#</a> AWSの6つのメリット</h2><ol><li>固定費(設備投資費)が変動コストに <ul><li>利用した分だけの支払いでOKになる</li></ul></li><li>スケールによるコストダウン <ul><li>多くのユーザーが利用するため、徐々に安くなっていく(「規模の経済」によるコストメリットが生じる) ※規模の経済 ： 生産規模を増やすほど単価コストが減少すること</li></ul></li><li>キャパシティ予想が不要に <ul><li>必要に応じてスケールアップ・スケールダウンを行えば良いので予測を行う必要が無い</li></ul></li><li>速度と俊敏性の向上 <ul><li>ITリソースをすぐに調達できるため、ビジネスの速度が向上</li></ul></li><li>データセンターの運用と保守への投資が不要 <ul><li>サーバーの管理が不要に</li></ul></li><li>わずか数分でデプロイ <ul><li>レイテンシーを抑えることが可能</li></ul></li></ol><p>参考: https://aws.amazon.com/jp/cloud/</p><h2 id="アーキテクチャの設計原理" tabindex="-1"><a class="header-anchor" href="#アーキテクチャの設計原理" aria-hidden="true">#</a> アーキテクチャの設計原理</h2><h3 id="desigin-for-failure" tabindex="-1"><a class="header-anchor" href="#desigin-for-failure" aria-hidden="true">#</a> Desigin for Failure</h3><p>故障に備えた設計のこと。単一障害点(停止するとシステム全体が停止してしまう部分)を作らないような設計とする。</p><ol><li>1つのデータセンターのみで運用しない</li><li>単一のインスタンスのみで運用しない</li></ol><h2 id="コンポーネントの分離" tabindex="-1"><a class="header-anchor" href="#コンポーネントの分離" aria-hidden="true">#</a> コンポーネントの分離</h2><ul><li>クラウドアーキテクチャではサービス指向アーキテクチャの設計原則を踏襲する</li><li>システムのコンポーネントは疎結合†にする</li><li>キューイングチェーンを利用することで耐障害性を高めることが可能</li></ul><p><img src="キューイングチェーン.png" alt="キューイングチェーン"></p><p>画像引用元: http://aws.clouddesignpattern.org/index.php/CDP:Queuing_Chain%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3</p><p>† 疎結合: システム間の依存関係、関連性などが弱く、各々の独立性が高い状態のこと</p><h2 id="弾力性の実装" tabindex="-1"><a class="header-anchor" href="#弾力性の実装" aria-hidden="true">#</a> 弾力性の実装</h2><ul><li>弾力性(Elastic)または伸縮性とも言う</li><li>リソースを柔軟にスケールアウト・スケールインできること</li></ul><h3 id="実装方式" tabindex="-1"><a class="header-anchor" href="#実装方式" aria-hidden="true">#</a> 実装方式</h3><ol><li>巡回スケーリング <ul><li>一定間隔ごとに発生する定期的なスケーリング</li></ul></li><li>イベントスケーリング <ul><li>予定されたイベントに合わせたスケーリング</li></ul></li><li>オンデマンドの自動スケーリング <ul><li>監視サービス(CloudWatch)のトリガーによるスケーリングを行う CPU使用率やネットワークI/O量などの監視項目に基づいてトリガーを送信し、AutoScalingで起動する。</li></ul></li></ol><h2 id="並列化" tabindex="-1"><a class="header-anchor" href="#並列化" aria-hidden="true">#</a> 並列化</h2><ul><li>クラウドでアーキテクチャ設計を行う場合は、ロードバランサーを組み合わせて並列処理を行う</li><li>スケーリングは弾力性を組み合わせて高負荷時にはスケールアウト・低負荷時にはスケールインを行う</li></ul><table><thead><tr><th>用語</th><th>内容</th></tr></thead><tbody><tr><td>スケールアップ</td><td>サーバスペック不足時にサーバのスペックを上げること</td></tr><tr><td>スケールダウン</td><td>サーバスペック不足時にサーバのスペックを下げてコストの適正化を図ること</td></tr><tr><td>スケールアウト</td><td>高負荷時にリクエストを処理するサーバー台数を増やすこと</td></tr><tr><td>スケールイン</td><td>低負荷時にリクエストを処理するサーバー台数を減らしてコストの適正化を図ること</td></tr></tbody></table><h2 id="コンテンツ配置" tabindex="-1"><a class="header-anchor" href="#コンテンツ配置" aria-hidden="true">#</a> コンテンツ配置</h2><ul><li>クラウドはネットワーク経由での利用になるため、配信時のオーバーヘッド等に対する対策が必要。</li><li>動的コンテンツをコンピュータ側、静的コンテンツをユーザー側の近くに配置する <ul><li>静的コンテンツはCloudFront(CDN)を利用し、</li></ul></li></ul><h3 id="cdn-content-delivery-network" tabindex="-1"><a class="header-anchor" href="#cdn-content-delivery-network" aria-hidden="true">#</a> CDN(Content Delivery Network)</h3><p>キャッシュサーバーが世界中に配置され、ネットワーク的にエンドユーザーとの距離が近いキャッシュサーバーからWebコンテンツを取得する仕組み</p><h2 id="aws-well-architectedフレームワーク" tabindex="-1"><a class="header-anchor" href="#aws-well-architectedフレームワーク" aria-hidden="true">#</a> AWS Well-Architectedフレームワーク</h2><p>信頼性、セキュリティ、効率、コスト効果が高いシステムを設計し、クラウドで運用するためにAWSにより作られたアークテクチャのベストプラクティス。</p><ol><li>運用上の優秀性 <ul><li>システムを稼働およびモニタリングする能⼒</li></ul></li><li>セキュリティ <ul><li>情報、システム、資産を保護する能力</li></ul></li><li>信頼性 <ul><li>サービスが期待通りに継続して動作する能力(サービスの障害からの復旧等)</li></ul></li><li>パフォーマンス効率 <ul><li>システムの要件を満たすためにコンピューティングリソースを効率的に使⽤する能力(要求の変化やテクノロジーの進化に対するものも含む)</li></ul></li><li>コスト最適化 <ul><li>最も安価にシステムを運⽤して、ビジネス価値を実現する能⼒</li></ul></li></ol><p>参考: https://aws.amazon.com/jp/architecture/well-architected/</p>',31),t={},r=(0,i(3744).Z)(t,[["render",function(l,e){return a}]])},3744:(l,e)=>{e.Z=(l,e)=>{const i=l.__vccOpts||l;for(const[l,a]of e)i[l]=a;return i}}}]);