"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[6834],{1713:(e,a,r)=>{r.r(a),r.d(a,{data:()=>l});const l={key:"v-d10948d6",path:"/infra/heroku%E5%85%A5%E9%96%80.html",title:"heroku入門 ～herokuを使ってWebアプリケーションを10分でデプロイする～",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"herokuとは",slug:"herokuとは",children:[]},{level:2,title:"対象の言語",slug:"対象の言語",children:[]},{level:2,title:"参考",slug:"参考",children:[]},{level:2,title:"Herokuの哲学",slug:"herokuの哲学",children:[]},{level:2,title:"The 12 Factor app",slug:"the-12-factor-app",children:[]},{level:2,title:"Herokuの歴史",slug:"herokuの歴史",children:[]},{level:2,title:"Herokuのメリット",slug:"herokuのメリット",children:[]},{level:2,title:"Herokuのデメリット",slug:"herokuのデメリット",children:[]},{level:2,title:"アジェンダ",slug:"アジェンダ",children:[]},{level:2,title:"herokuが考えるアプリケーション開発の姿",slug:"herokuが考えるアプリケーション開発の姿",children:[]},{level:2,title:"herokuが標準でサポートしている言語",slug:"herokuが標準でサポートしている言語",children:[]}],filePathRelative:"infra/heroku入門.md",git:{updatedTime:1639532968e3,contributors:[{name:"bamv-ikeda",email:"ikeda@bamv.co.jp",commits:1}]}}},1228:(e,a,r)=>{r.r(a),r.d(a,{default:()=>g});var l=r(6252);const n=(0,l.uE)('<h1 id="heroku入門-herokuを使ってwebアプリケーションを10分でデプロイする" tabindex="-1"><a class="header-anchor" href="#heroku入門-herokuを使ってwebアプリケーションを10分でデプロイする" aria-hidden="true">#</a> heroku入門 ～herokuを使ってWebアプリケーションを10分でデプロイする～</h1><h2 id="herokuとは" tabindex="-1"><a class="header-anchor" href="#herokuとは" aria-hidden="true">#</a> herokuとは</h2><ul><li>herokuとはカスタムアプリケーションをクラウド環境で運用するためのPaas(Platform as a Service：サービスとしてのプラットフォーム)</li><li>インフラ部分にはAWS(Amazon Web Service)を利用している</li><li>デプロイや管理を容易にするためのツール</li><li>拡張性と耐障害性を実現するアプリケーション実行環境</li><li>プラットフォームの拡張を可能にするアドオンエコシステムを備えている</li><li>開発者はアプリケーションの本質的な価値の創造に集中して取り組める</li></ul><h2 id="対象の言語" tabindex="-1"><a class="header-anchor" href="#対象の言語" aria-hidden="true">#</a> 対象の言語</h2><ul><li>元々はRubyのプログラマの間で有名なプラットフォームだが、最近はいろいろなプログラミング言語やフレームワークに対応している</li><li>Ruby(Ruby on Rails)</li><li>Java(Spring Boot)</li><li>Python(Django)</li><li>PHP(Laravel)</li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',6),i={href:"https://findy-code.io/engineer-lab/b2b-startup-heroku",target:"_blank",rel:"noopener noreferrer"},o=(0,l.Uk)("B2B スタートアップの初期は Heroku でいいんじゃないかって話"),h={href:"https://codezine.jp/article/detail/8344",target:"_blank",rel:"noopener noreferrer"},s=(0,l.Uk)("Herokuアプリケーションの実行プラットフォーム「Dyno」を徹底的に理解する"),t={href:"https://sakagami3.com/entry/2015/05/03/191208",target:"_blank",rel:"noopener noreferrer"},u=(0,l.Uk)("Rails アプリのインフラを AWS から heroku に移行した話"),p={href:"https://shelfy.co.jp/shelf/product_post/584",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Uk)("なぜ AWS を捨てて Heroku を選んだのか"),c={href:"https://www.daily-dev.net/entry/2017/01/20/Rails%E7%92%B0%E5%A2%83%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B_heroku_vs_AWS_%E3%81%BE%E3%81%A8%E3%82%81",target:"_blank",rel:"noopener noreferrer"},k=(0,l.Uk)("HerokuでRailsを運用するメリットデメリットについて"),b={href:"https://qiita.com/shu_0115/items/0106198f7a0be2f2a509",target:"_blank",rel:"noopener noreferrer"},f=(0,l.Uk)("Herokuのメリット、デメリット | Qiita"),v=(0,l.uE)('<h2 id="herokuの哲学" tabindex="-1"><a class="header-anchor" href="#herokuの哲学" aria-hidden="true">#</a> Herokuの哲学</h2><p>「開発者の生産性を最大化させる」</p><h2 id="the-12-factor-app" tabindex="-1"><a class="header-anchor" href="#the-12-factor-app" aria-hidden="true">#</a> The 12 Factor app</h2><p>Herokuの創業者の一人であるAdam WigginsはモダンなWebアプリケーションを設計・実装・運用するために考慮すべき12のポイントとしてまとめたもの よかったら見てね</p><h2 id="herokuの歴史" tabindex="-1"><a class="header-anchor" href="#herokuの歴史" aria-hidden="true">#</a> Herokuの歴史</h2><p>2007年 Heroku Gardenという名前でRails用のブラウザ統合開発環境のようなサービスをリリース。 2009年 Gitによるリソース管理プロセスそのものをデプロイの手続きとする 2010年 salesforce.comによる買収 2011年 Java言語への対応</p><h2 id="herokuのメリット" tabindex="-1"><a class="header-anchor" href="#herokuのメリット" aria-hidden="true">#</a> Herokuのメリット</h2><p>楽</p><p>これがherokuを使う理由の全てです。 他のメリットも一応挙げていきますがとってつけた理由です。</p><ul><li>設定からデプロイまでが VPS や AWS と比べると圧倒的に楽</li><li>デプロイ時間が少ない</li><li>簡単</li><li>アドオンによる連携がすぐにできる</li></ul><h2 id="herokuのデメリット" tabindex="-1"><a class="header-anchor" href="#herokuのデメリット" aria-hidden="true">#</a> Herokuのデメリット</h2><h1 id="やれるheroku-javaアプリケーション開発" tabindex="-1"><a class="header-anchor" href="#やれるheroku-javaアプリケーション開発" aria-hidden="true">#</a> やれるheroku-Javaアプリケーション開発</h1><p>※Webセミナーのメモ https://developer.salesforce.com/events/webinars/herokujava_0414</p><h2 id="アジェンダ" tabindex="-1"><a class="header-anchor" href="#アジェンダ" aria-hidden="true">#</a> アジェンダ</h2><ul><li>heokuの基本</li><li>heorokuのJavaサポート</li><li>herokuへのJavaアプリケーションのデプロイ方法</li><li>JVM言語のサポート</li><li>Javaアプリケーションの外部サービスとの接続</li></ul><h2 id="herokuが考えるアプリケーション開発の姿" tabindex="-1"><a class="header-anchor" href="#herokuが考えるアプリケーション開発の姿" aria-hidden="true">#</a> herokuが考えるアプリケーション開発の姿</h2><ul><li>インフラの業務管理ではなくアプリケーション開発に集中するべき</li><li>モダンなWebアプリを開発するのに必要な考慮点をシンプルにする</li></ul><p>実際にやるとしたら？ 以下のようなことを考えないといけない</p><ul><li>AWS?</li><li>OSを考える(Linux?)</li><li>Docker?</li><li>Storage</li><li>ネットワーク ...</li></ul><p>→以下のようにシンプルにする</p><ul><li>デプロイ</li><li>manage</li><li>scale</li></ul><h1 id="the-twelve-factor-app" tabindex="-1"><a class="header-anchor" href="#the-twelve-factor-app" aria-hidden="true">#</a> The twelve Factor App</h1><ul><li>現代的なアプリケーションを設計、構築、運用するための12の方法論</li><li>Herokuの創業者のアダム・ウィギンスがプラットフォームサービス上で稼働する数百のアプリの特性から得た知見をまとめたもの</li></ul><p>良いアプリケーションがどういう特性を持っているかまとめたもの (良いアプリケーションの設計思想)</p><p>https://12factor.net/ja/</p><h1 id="herokuが提供する機能" tabindex="-1"><a class="header-anchor" href="#herokuが提供する機能" aria-hidden="true">#</a> herokuが提供する機能</h1><ul><li><p>Runtime(Dyno) herokuが管理(LinuxのUbuntu)。コンテナベースのプロセスエンジンで、サーバーまるまる一個提供しているわけではない、一つの仮想サーバーに対し4つくらいのDynoが動いている</p></li><li><p>Developer Experience(DX) アプリケーションのモニタリング CD（継続的デリバリ） など</p></li><li><p>Data Services and Ecosystem RDBはPostgreSQL。KVSであればRedisを提供している。 MongoDBやMySQLを追加したければ、サードパーティーのアドオンを使用する。 herokuが提供しているデータソースは二つ</p></li></ul><h1 id="herokuダッシュボード" tabindex="-1"><a class="header-anchor" href="#herokuダッシュボード" aria-hidden="true">#</a> herokuダッシュボード</h1><p>heroku上で稼働するアプリを統合的に管理</p><p>Dynoの拡張とアドオンの追加 ダッシュボードから簡単に実行可能</p><h1 id="dynoのロール" tabindex="-1"><a class="header-anchor" href="#dynoのロール" aria-hidden="true">#</a> Dynoのロール</h1><p>Webサーバー以外にもバッチプロセスやスケジューラなど</p><h1 id="herokuのdynoの考え方" tabindex="-1"><a class="header-anchor" href="#herokuのdynoの考え方" aria-hidden="true">#</a> herokuのDynoの考え方</h1><p>一つのアプリに対して複数のDynoが配備され、ルータによりラウンドロビンする。 欠けたコンテナはすぐに別のサーバー上で起動され、ルーティングが変更。</p><p>※ここはスライド参照した方が分かりやすい</p><p>ステートレスなアプリケーションの開発を推奨している</p><h1 id="heroku-private-spaces" tabindex="-1"><a class="header-anchor" href="#heroku-private-spaces" aria-hidden="true">#</a> Heroku Private Spaces</h1><p>単純にサーバーを占有したという場合には「Heroku Private Spaces」というサービスを提供している。</p><h1 id="herokuのアプリケーションデプロイ方法" tabindex="-1"><a class="header-anchor" href="#herokuのアプリケーションデプロイ方法" aria-hidden="true">#</a> Herokuのアプリケーションデプロイ方法</h1><p>Gitを利用して、コード自体をPushする。で終わり</p><p>処理の流れ アプリ実行環境の判別→依存ライブラリなどのインストール・セットアップ</p><p>git push されたコードを自動認識してくれる node.jsの場合、package.jsonで判別など</p><h2 id="herokuが標準でサポートしている言語" tabindex="-1"><a class="header-anchor" href="#herokuが標準でサポートしている言語" aria-hidden="true">#</a> herokuが標準でサポートしている言語</h2><p>開発者が意識しなくても、Herokuがランタイムの保守管理を行う</p><ul><li>node.js</li><li>Ruby</li><li>Java</li><li>PHP</li><li>Python</li><li>Go</li><li>Scala</li><li>Clojure</li></ul><h1 id="buildpack" tabindex="-1"><a class="header-anchor" href="#buildpack" aria-hidden="true">#</a> BuildPack</h1><p>コンテナに任意のランタイムを利用できるようにするためのしくみ ３つのコマンドでビルドをコントロール bin/detect：アプリにBuildPackが適用できるかを判別する bin/compile：アプリを実行可能な状態にコンパイルや変換を行う bin/release：ランタイムに必要なメタデータの付与</p><p>herokuが標準でサポートしている言語=heroku自身が管理しているビルドパック</p><p>BuildPackの一覧に関しては上から順番に全てなめていきます。</p><p>Javaの場合は、基本的にmavenでビルドするのが前提</p><p>pom.xmlがあるかどうかを判定 なかったらgradle,grails</p><p>もし対応するものがなかった場合は、自分で作ることも出来る。あるいは他の人が作った物を使う事が出来る</p><h1 id="javaを利用する方法" tabindex="-1"><a class="header-anchor" href="#javaを利用する方法" aria-hidden="true">#</a> Javaを利用する方法</h1><p>maven：pom.xml gradle：build.gradle</p><p>のどちらかがあるとJavaのアプリケーションとして認識される</p><h1 id="buildpackは明示することは可能" tabindex="-1"><a class="header-anchor" href="#buildpackは明示することは可能" aria-hidden="true">#</a> BuildPackは明示することは可能</h1><p>CLI</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>heroku buildpacks:set heroku/node.js\nheroku buildpacks:remove heroku/node.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>app.json</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;buildpacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span><span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://github.com/heroku/heroku-buildpack-pgbouncer&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span><span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;heroku/ruby&quot;</span><span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>herokuへのJavaのデプロイ方法</p><ol><li>maven or gradleによってプロジェクトを構成</li><li>Javaのプログラムを作成</li><li>ProcfileによってMainとなるプログラムを指定</li><li>HerokuアプリをCreateして、Gitでデプロイ</li></ol><p>通常と異なるのは、3以降</p><p>サーブレットコンテナを起動してそこにデプロイをするのが通常の流れだが、実行可能な embedded.tomcat embedded.jetty netty</p><h1 id="maven-or-gradleによってプロジェクトを構成" tabindex="-1"><a class="header-anchor" href="#maven-or-gradleによってプロジェクトを構成" aria-hidden="true">#</a> maven or gradleによってプロジェクトを構成</h1><p>Getting-startedリポジトリを提供しているのでそれを利用 https://github.com/heroku/gradle-getting-started</p><h1 id="procfileとは" tabindex="-1"><a class="header-anchor" href="#procfileとは" aria-hidden="true">#</a> Procfileとは</h1><p>herokuは内部でForeman（ライブラリ）を利用</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ foreman start -c <span class="token assign-left variable">web</span><span class="token operator">=</span><span class="token number">2</span> -p <span class="token number">3000</span> -e\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>https://github.com/ddollar/foreman</p><p>Procfileをベースにプロセスの複数起動や、並列起動を管理するツール</p><h1 id="heroku-toolbelt" tabindex="-1"><a class="header-anchor" href="#heroku-toolbelt" aria-hidden="true">#</a> heroku toolbelt</h1><p>herokuのコマンドラインツール</p><h1 id="herokuのダッシュボードのページの機能" tabindex="-1"><a class="header-anchor" href="#herokuのダッシュボードのページの機能" aria-hidden="true">#</a> herokuのダッシュボードのページの機能</h1><p>パイプライン レビュー→ステージング→本番</p><p>ステージングに関してはgithubのリポジトリ</p>',76),m={},g=(0,r(3744).Z)(m,[["render",function(e,a){const r=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[n,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",i,[o,(0,l.Wm)(r)])]),(0,l._)("li",null,[(0,l._)("a",h,[s,(0,l.Wm)(r)])]),(0,l._)("li",null,[(0,l._)("a",t,[u,(0,l.Wm)(r)])]),(0,l._)("li",null,[(0,l._)("a",p,[d,(0,l.Wm)(r)])]),(0,l._)("li",null,[(0,l._)("a",c,[k,(0,l.Wm)(r)])]),(0,l._)("li",null,[(0,l._)("a",b,[f,(0,l.Wm)(r)])])]),v],64)}]])},3744:(e,a)=>{a.Z=(e,a)=>{const r=e.__vccOpts||e;for(const[e,l]of a)r[e]=l;return r}}}]);