"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[8571],{8965:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-66998439",path:"/other/shellscript/%E3%82%B7%E3%82%A7%E3%83%AB%E5%A4%89%E6%95%B0%E3%81%A8%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%AE%E9%81%95%E3%81%84.html",title:"シェル変数と環境変数の違い",lang:"ja",frontmatter:{},excerpt:"",headers:[],filePathRelative:"other/shellscript/シェル変数と環境変数の違い.md",git:{updatedTime:1639532968e3}}},6970:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="シェル変数と環境変数の違い" tabindex="-1"><a class="header-anchor" href="#シェル変数と環境変数の違い" aria-hidden="true">#</a> シェル変数と環境変数の違い</h1><ul><li>環境変数は子プロセスにも引き継がれる</li><li>シェル変数は子プロセスには引き継がれない</li></ul><p>call_env.sh</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#! /bin/bash</span>\n<span class="token comment"># encoding: utf-8</span>\n\n<span class="token builtin class-name">echo</span> <span class="token variable">$SHELL_VARIABLE</span>\n<span class="token builtin class-name">echo</span> <span class="token variable">$ENVIORONMENT_VARIABLE</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">SHELL_VARIABLE</span><span class="token operator">=</span><span class="token string">&quot;シェル変数だよ&quot;</span>\n<span class="token assign-left variable">ENVIORONMENT_VARIABLE</span><span class="token operator">=</span><span class="token string">&quot;環境変数だよ&quot;</span>\n<span class="token builtin class-name">export</span> ENVIORONMENT_VARIABLE\n\n<span class="token function">sh</span> call_env.sh\n<span class="token comment"># 環境変数のみ表示される</span>\n\n<span class="token builtin class-name">.</span> call_env.sh\n<span class="token comment"># 両方表示される(.コマンドは同一プロセス内で実行するため)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',5),l={},p=(0,a(3744).Z)(l,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);