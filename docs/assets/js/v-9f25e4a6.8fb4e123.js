"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[4290],{3177:(e,l,i)=>{i.r(l),i.d(l,{data:()=>a});const a={key:"v-9f25e4a6",path:"/backend/java/DI%E3%81%A8%E3%81%AF.html",title:"DIとは",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"TL;DR",slug:"tl-dr",children:[]},{level:2,title:"DIコンテナ",slug:"diコンテナ",children:[]},{level:2,title:"DIすると何が嬉しいか？",slug:"diすると何が嬉しいか",children:[]},{level:2,title:"DIしないと何がダメなのか？",slug:"diしないと何がダメなのか",children:[]},{level:2,title:"よく分からなかった人向け",slug:"よく分からなかった人向け",children:[]}],filePathRelative:"backend/java/DIとは.md",git:{updatedTime:1639532968e3,contributors:[{name:"bamv-ikeda",email:"ikeda@bamv.co.jp",commits:1}]}}},509:(e,l,i)=>{i.r(l),i.d(l,{default:()=>k});var a=i(6252);const n=(0,a.uE)('<h1 id="diとは" tabindex="-1"><a class="header-anchor" href="#diとは" aria-hidden="true">#</a> DIとは</h1><h2 id="tl-dr" tabindex="-1"><a class="header-anchor" href="#tl-dr" aria-hidden="true">#</a> TL;DR</h2><ul><li>Dependency Injectionの略で、必要なオブジェクトを外部から注入すること。（依存性の注入と訳すとイミフ）</li><li>内部から外部のクラスを呼び出して使用する必要なオブジェクト(依存するオブジェクト)を、<br> 外部から内部へ注入するようにする(内部からは呼び出しを行わない)</li></ul><h2 id="diコンテナ" tabindex="-1"><a class="header-anchor" href="#diコンテナ" aria-hidden="true">#</a> DIコンテナ</h2><ul><li>注入する依存オブジェクトをまとめたもの</li></ul><h2 id="diすると何が嬉しいか" tabindex="-1"><a class="header-anchor" href="#diすると何が嬉しいか" aria-hidden="true">#</a> DIすると何が嬉しいか？</h2><ul><li>外部の環境などに依存する部分(データへのアクセス等)を切り離し、ソフトウェアの外部から提供できるようになる</li><li>つまり、内部の環境への依存度を下げることができ、変化に強くなる</li></ul><p>以下は下記リンクの引用</p>',8),r={href:"http://itpro.nikkeibp.co.jp/free/ITPro/OPINION/20050216/156274/?ST=develop&P=2&rt=nocnt",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Uk)("記者の眼 - Java開発を変える最新の設計思想「Dependency Injection（DI）」とは：ITpro"),d=(0,a._)("blockquote",null,[(0,a._)("p",null,"・ソフトウエアの階層をきれいに分離した設計が容易になる ・コードが簡素になり，開発期間が短くなる ・テストが容易になり，「テスト・ファースト」による開発スタイルを取りやすくなる ・特定のフレームワークへの依存性が極小になるため，変化に強いソフトウエアを作りやすくなる（＝フレームワークの進化や，他のフレームワークへの移行に対応しやすくなる）")],-1),h=(0,a._)("p",null,"よく分からない人もいると思うのでDIすると何が嬉しいのかではなくDIしないと何がダメなのかを説明してみる。",-1),c=(0,a._)("h2",{id:"diしないと何がダメなのか",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#diしないと何がダメなのか","aria-hidden":"true"},"#"),(0,a.Uk)(" DIしないと何がダメなのか？")],-1),u=(0,a._)("ul",null,[(0,a._)("li",null,"バグが発生した際に、どこが悪いのか分かりやすくなる"),(0,a._)("li",null,"テストがしやすくなる")],-1),o=(0,a._)("h2",{id:"よく分からなかった人向け",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#よく分からなかった人向け","aria-hidden":"true"},"#"),(0,a.Uk)(" よく分からなかった人向け")],-1),s={href:"https://qiita.com/hshimo/items/1136087e1c6e5c5b0d9f",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("猿でも分かる! Dependency Injection: 依存性の注入"),f={},k=(0,i(3744).Z)(f,[["render",function(e,l){const i=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[n,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",r,[t,(0,a.Wm)(i)])])]),d,h,c,u,o,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",s,[p,(0,a.Wm)(i)])])])],64)}]])},3744:(e,l)=>{l.Z=(e,l)=>{const i=e.__vccOpts||e;for(const[e,a]of l)i[e]=a;return i}}}]);