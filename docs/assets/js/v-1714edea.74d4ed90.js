"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[1595],{3152:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-1714edea",path:"/infra/aws/knowlegdge%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB.html",title:"AWSの設定",lang:"ja",frontmatter:{},excerpt:"",headers:[{level:2,title:"gitのインストール",slug:"gitのインストール",children:[]},{level:2,title:"dockerのインストール",slug:"dockerのインストール",children:[]},{level:2,title:"docker-composeのインストール",slug:"docker-composeのインストール",children:[]},{level:2,title:"knowledgeのインストール",slug:"knowledgeのインストール",children:[]}],filePathRelative:"infra/aws/knowlegdgeインストール.md",git:{updatedTime:1639532968e3}}},7362:(n,s,e)=>{e.r(s),e.d(s,{default:()=>u});var a=e(6252);const l=(0,a._)("h1",{id:"awsの設定",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#awsの設定","aria-hidden":"true"},"#"),(0,a.Uk)(" AWSの設定")],-1),o={class:"table-of-contents"},r=(0,a.Uk)("gitのインストール"),c=(0,a.Uk)("dockerのインストール"),p=(0,a.Uk)("docker-composeのインストール"),i=(0,a.Uk)("knowledgeのインストール"),t=(0,a.uE)('<h2 id="gitのインストール" tabindex="-1"><a class="header-anchor" href="#gitのインストール" aria-hidden="true">#</a> gitのインストール</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum update\n<span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">git</span>\n\n<span class="token comment"># インストールされていることを確認</span>\n<span class="token function">git</span> version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="dockerのインストール" tabindex="-1"><a class="header-anchor" href="#dockerのインストール" aria-hidden="true">#</a> dockerのインストール</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> amazon-linux-extras <span class="token function">install</span> docker\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="docker-composeのインストール" tabindex="-1"><a class="header-anchor" href="#docker-composeのインストール" aria-hidden="true">#</a> docker-composeのインストール</h2><ul><li>docker-composeの最新バージョンを確認する</li></ul><p><code>https://github.com/docker/compose/releases/</code>にてdocker-composeの最新バージョンを確認</p><ul><li>docker-composeをインストールする</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># URLに最新のバージョンを指定し、docker-composeをインストールする（1.29.1は2021/04/15現在の最新バージョン）</span>\n<span class="token function">sudo</span> <span class="token function">curl</span> -L <span class="token string">&quot;https://github.com/docker/compose/releases/download/1.29.1/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>&quot;</span> -o /usr/local/bin/docker-compose\n\n<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose\n\n<span class="token comment"># シンボリックリンクの作成</span>\n<span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\n<span class="token comment"># インストールされていることを確認</span>\ndocker-compose --version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="knowledgeのインストール" tabindex="-1"><a class="header-anchor" href="#knowledgeのインストール" aria-hidden="true">#</a> knowledgeのインストール</h2><ul><li>docker-composeの作成</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vi</span> docker-compose.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>docker-composeの修正</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>version: &#39;2&#39;\nservices:\n    app:\n        image: koda/docker-knowledge:japanese\n        #build: .\n        volumes:\n            - ./volumes/knowledge:/root/.knowledge\n        ports:\n            - 8080:8080\n        restart: always\n        depends_on:\n            - &quot;db&quot;\n    db:\n        image: postgres:9\n        environment:\n            - POSTGRES_USER=postgres\n            - POSTGRES_PASSWORD=admin123\n            - POSTGRES_DB=knowledge_production\n        volumes:\n            #- ./volumes/initdb:/docker-entrypoint-initdb.d\n            - ./volumes/postgres/data:/var/lib/postgresql/data\n        restart: always\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',14),d={},u=(0,e(3744).Z)(d,[["render",function(n,s){const e=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,(0,a._)("nav",o,[(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(e,{to:"#gitのインストール"},{default:(0,a.w5)((()=>[r])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(e,{to:"#dockerのインストール"},{default:(0,a.w5)((()=>[c])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(e,{to:"#docker-composeのインストール"},{default:(0,a.w5)((()=>[p])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(e,{to:"#knowledgeのインストール"},{default:(0,a.w5)((()=>[i])),_:1})])])]),t],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}}}]);