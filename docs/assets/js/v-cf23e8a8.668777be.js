"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[5170],{2292:(a,e,l)=>{l.r(e),l.d(e,{data:()=>t});const t={key:"v-cf23e8a8",path:"/backend/java/Java%E3%81%AE%E5%9F%BA%E7%A4%8E.html",title:"Javaの大事なこと",lang:"ja",frontmatter:{},excerpt:"",headers:[],filePathRelative:"backend/java/Javaの基礎.md",git:{updatedTime:1639532968e3}}},6258:(a,e,l)=>{l.r(e),l.d(e,{default:()=>n});const t=(0,l(6252).uE)('<h1 id="javaの大事なこと" tabindex="-1"><a class="header-anchor" href="#javaの大事なこと" aria-hidden="true">#</a> Javaの大事なこと</h1><ul><li>読みやすく（可読性）</li><li>使いやすく（可用性）</li><li>直しやすい（拡張性） コードが目標（保守性） そのため、</li><li>二度同じことを書かない ということを徹底する</li></ul><p>オブジェクト志向</p><ul><li>カプセル化：他の人に同じ記述を書かせない</li><li>ポリモーフィズム：同じようなものと見なして同じ記述を減らす</li><li>継承：似たクラスはまとめて同じ記述を減らす</li></ul><p>オブジェクト志向とは？ →モノのように役割を決めることで、同じ記述を減らすための考え方</p>',5),i={},n=(0,l(3744).Z)(i,[["render",function(a,e){return t}]])},3744:(a,e)=>{e.Z=(a,e)=>{const l=a.__vccOpts||a;for(const[a,t]of e)l[a]=t;return l}}}]);